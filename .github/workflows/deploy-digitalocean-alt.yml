name: Deploy to DigitalOcean (Alternative)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DO_SSH_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to DigitalOcean Droplet
      env:
        DO_HOST: ${{ secrets.DO_HOST }}
        DO_USERNAME: ${{ secrets.DO_USERNAME }}
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $DO_USERNAME@$DO_HOST << 'EOF'
          # Navigate to project directory
          cd /opt/open-ODE
          
          # Pull latest changes
          git pull origin main
          
          # Install dependencies
          npm ci
          cd client && npm ci && cd ..
          
          # Build the client
          cd client && npm run build && cd ..
          
          # Build Docker image
          docker build -t openode-app .
          
          # Stop existing container
          docker stop openode-container || true
          docker rm openode-container || true
          
          # Run new container
          docker run -d \
            --name openode-container \
            --restart unless-stopped \
            -p 3000:3000 \
            -p 8081:8081 \
            -v /var/run/docker.sock:/var/run/docker.sock \
            --env-file .env \
            openode-app
          
          # Clean up old images
          docker image prune -f
          
          # Verify deployment
          docker ps | grep openode-container
        EOF